let express,Tablas;_4c4‍.x([["default",()=>_4c4‍.o]]);_4c4‍.w("express",[["default",["express"],function(v){express=v}]]);_4c4‍.w("../models/Tablas.js",[["default",["Tablas"],function(v){Tablas=v}]]);//aqui van las rutas de todo lo relacionado a tabla



const router = express.Router();

//construccion de los links
router.get("/tabla", async (req,res) => {    
    const tablas = await Tablas.find({});

    res.render("Tablas/tabla", {
        style: 'StyleTabla.css',
        Alltablas: tablas.map((current) => {
            return {
                ID: current.ID,
                Nombre_evento: current.Nombre_evento,
                Fecha_creacion: current.Fecha_creacion,
                Detalle_creacion: current.Detalle_creacion,
                Estado: current.Estado,
                Votar: current.Votar
            };
        }),
    });
});

router.get("/crearvotacion", async (req,res) =>{
    res.render("Tablas/crearVotacion",{
        style: 'Stylevotacion.css',
    });
});
router.post("/crearvotacion", (req,res) => {
    const tabla ={
        ID: Math.floor(Math.random()*1000) + 1,
        Nombre_evento: req.body.Nombre_evento,
        Fecha_creacion: new Date(), // Establece la fecha actual aquí
        Estado: true,
        Persona1: req.body.Persona1,
        Persona2: req.body.Persona2,
        Persona3: req.body.Persona3,
        voto1: 0,
        voto2: 0,
        voto3: 0,
    };
    Tablas.create(tabla);
    _4c4‍.g.console.log("data", tabla);     
    res.render("Tablas/crearVotacion",{
        style: 'Stylevotacion.css',
    });

});

router.get("/:Nombre_tabla", async (req,res)=>{
    const tabla = Tablas.find({Nombre_evento: req.params.Nombre_tabla})
    retorno: tabla.map((current) => {
        return {
            Nombre_evento: current.Nombre_evento,
            Persona1: current.Persona1,
            Persona2: current.Persona1,
            Persona3: current.Persona1,
        };
    })
    res.render("tablas/Lugar_votacion",{
        style: 'CreacionStyle.css'
    });
});


_4c4‍.d(router);